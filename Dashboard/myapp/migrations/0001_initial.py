# Generated by Django 5.0.6 on 2024-06-27 07:10

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ControlInfos',
            fields=[
                ('index', models.AutoField(primary_key=True, serialize=False)),
                ('Ramses_id', models.TextField(db_column='No. Ident.')),
                ('Date_control', models.DateTimeField(db_column='Date de contrôle')),
                ('Date_last_control', models.DateTimeField(db_column='Date dernier contrôle')),
                ('Type_control', models.TextField(db_column='Type de contrôle')),
                ('Tool_id', models.CharField(db_column='Règle 1')),
                ('Périodicité', models.IntegerField(max_length=4)),
                ('Author', models.TextField(db_column='Fiche remplie par:')),
                ('Path', models.TextField()),
                ('Section', models.IntegerField()),
            ],
            options={
                'db_table': 'clean_control_infos_field',
            },
        ),
        migrations.CreateModel(
            name='MeasurementResults',
            fields=[
                ('level_0', models.AutoField(primary_key=True, serialize=False)),
                ('Quote_name', models.TextField()),
                ('Quote_measured_value', models.FloatField()),
                ('Corrected_value', models.FloatField()),
                ('Branch', models.IntegerField()),
                ('Nominal_value', models.FloatField()),
                ('IAL_min', models.FloatField()),
                ('IAL_max', models.FloatField()),
                ('IL_min', models.FloatField()),
                ('IL_max', models.FloatField()),
                ('AL_min', models.FloatField()),
                ('AL_max', models.FloatField()),
                ('NEW_min', models.FloatField()),
                ('NEW_max', models.FloatField()),
                ('MAI_min', models.FloatField()),
                ('MAI_max', models.FloatField()),
                ('Quote_category', models.TextField()),
                ('Quote_State', models.TextField()),
                ('Quote_name_general', models.TextField()),
                ('Section', models.IntegerField()),
            ],
            options={
                'db_table': 'clean_df_measurement_results_field',
            },
        ),
        migrations.CreateModel(
            name='SwitchCharacteristics',
            fields=[
                ('index', models.AutoField(primary_key=True, serialize=False)),
                ('Num_ES', models.CharField(db_column='Numéro ES')),
                ('Cat_UIC', models.CharField(db_column='Catégorie UIC')),
                ('Stratégie', models.TextField()),
                ('Type_AW', models.TextField(db_column="Type d'appareil")),
                ('Switch_family', models.TextField()),
                ('Tangent_hart', models.TextField()),
                ('Déviation', models.TextField()),
                ('V_directe', models.CharField(db_column='Vitesse branche directe')),
                ('V_déviée', models.CharField(db_column='Vitesse branche déviée')),
                ('Faisceau', models.TextField()),
                ('Date_dernier_renouv', models.DateTimeField(db_column='Date dernier renouv.')),
                ('Coeur_fissuré', models.TextField(db_column='Coeur(s) fissuré(s)')),
                ('Gare_Bifurcation', models.TextField(db_column='Gare / Bifurcation')),
                ('Ligne', models.TextField()),
                ('Cat_voie', models.TextField(db_column='Catégorie de voie')),
                ('Voie', models.CharField()),
                ('Wissel_begin', models.CharField()),
                ('Wisselzone_begin', models.CharField()),
                ('Wissel_einde', models.CharField()),
                ('Wisselzone_einde', models.CharField()),
                ('Wissel_begin_KP', models.CharField()),
                ('Wissel_begin_M', models.CharField()),
                ('Wissel_einde_KP', models.CharField()),
                ('Wissel_einde_M', models.CharField()),
                ('Wisselzone_begin_KP', models.CharField()),
                ('Wisselzone_begin_M', models.CharField()),
                ('Wisselzone_einde_KP', models.CharField()),
                ('Wisselzone_einde_M', models.CharField()),
                ('Modèle_P1', models.CharField(db_column='Modèle coeur P1')),
                ('Modèle_P2', models.CharField(db_column='Modèle coeur P2')),
                ('Nombre_att_compl', models.CharField(db_column="Nombre d'attaques compl.")),
                ('Rayon_directe', models.CharField(db_column='Rayon voie directe')),
                ('Straal_afwijkende_tak', models.CharField()),
                ('Nom_verkanting', models.CharField(db_column='Nominale verkanting')),
                ('Model_halve_tongenstellen', models.TextField(db_column='Model halve tongenstellen')),
                ('Modèle_K1_K2', models.TextField(db_column='Modèle coeur K1/K2')),
                ('Arr', models.IntegerField(db_column='Arrond.:')),
                ('Poste', models.IntegerField(db_column='Poste:')),
                ('Switch_index', models.CharField()),
                ('Switch_familyyy', models.TextField()),
                ('Section', models.IntegerField()),
            ],
            options={
                'db_table': 'clean_switch_characteristics_field',
            },
        ),
    ]
